<meta name="turbo-cache-control" content="no-cache">
<meta name="turbo-visit-control" content="reload">
<style>
  /* Hide header on login page */
  #header-mfe-container {
    display: none !important;
  }
  
  /* Adjust main content spacing since header is hidden */
  main {
    padding-top: 0 !important;
  }
</style>

<!-- Login Microfrontend Container -->
<div id="login-mfe-container" >
  <div style="text-align: center; color: #666; padding: 40px;">
    <!-- MFE Container -->
  </div>
</div>

<!-- Hidden Rails form for the microfrontend to submit -->
<%= form_with url: session_path, local: true, html: { id: 'rails-login-form', style: 'display: none;' } do |form| %>
  <%= form.email_field :email_address, id: 'rails-email', required: true, autocomplete: "username" %>
  <%= form.password_field :password, id: 'rails-password', required: true, autocomplete: "current-password", maxlength: 72 %>
  <%= form.submit "Sign in", id: 'rails-submit' %>
<% end %>

<!-- Make login data available globally for the microfrontend -->
<script>
  window.loginData = {
    sessionPath: '<%= session_path %>',
    newPasswordPath: '<%= new_password_path %>',
    newUserPath: '<%= new_user_path %>',
    flashAlert: <%= flash[:alert].to_json %>,
    flashNotice: <%= flash[:notice].to_json %>,
    emailValue: '<%= params[:email_address] %>'
  };
  console.log('ðŸ”µ Login data loaded for microfrontend:', window.loginData);
  
  // Force re-evaluation of MFEs after login data is loaded
  document.addEventListener('DOMContentLoaded', function() {
    setTimeout(function() {
      if (window.miniSPA && window.miniSPA.started) {
        console.log('ðŸ”µ Forcing MFE re-evaluation for login page');
        window.miniSPA.evaluateApps();
      }
    }, 100);
  });
</script>
